@model OnlineWarehousingInformationSystem.Models.Users
@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="row align-items-center">
        <div class="col-md-12">
            <div class="col-md-10">
                <h3>Edit User</h3>
            </div>
            <div class="col-md-2">
                <input type="button" class="btn btn-primary" value="Back to List" onclick="location.href='@Url.Action("Index", "Users")'" />
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.userID)
    <div class="form-group">
        <b class="control-label col-md-2">User name</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <b class="control-label col-md-2">Passport</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.userPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.userPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <b class="control-label col-md-2">User type</b>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.userType, new SelectListItem[]
            {
                new SelectListItem {Value="0", Text="User", Selected = (Model.userType == "0")},
                new SelectListItem {Value="1", Text="Staff", Selected = (Model.userType == "1")},
                new SelectListItem {Value="2", Text="Admin", Selected = (Model.userType == "2")}})
        </div>
    </div>
    <div class="form-group">
        <b class="control-label col-md-2">First name</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2">Last Name</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <b class="control-label col-md-2">Age</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.userAge, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.userAge, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2">Gender</b>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.userGender, new SelectListItem[]
          {
              new SelectListItem {Value="Male", Text="Male",Selected = (Model.userGender == "Male")},
              new SelectListItem {Value="Female", Text="Female",Selected = (Model.userGender== "Female")},
              new SelectListItem {Value="Other", Text="Other", Selected = (Model.userGender== "Other")},
              new SelectListItem {Value="Not Depicted", Text="Rather Not To Choose", Selected = (Model.userGender== "Not Depicted")}})
        </div>
    </div>
    <div class="form-group">
        <b class="control-label col-md-2">Address</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.userAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.userAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2">E-mail</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2">Phone Number</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>
</div>

}
<div></div>